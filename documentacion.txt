Se realiza el proyecto con la siguiente configuracion de Springboot:
- Se utiliza Gradle - Groovy
- Lenguaje JAVA --version 24
- Version SpringBoot 3.4.5
- Packaing: JAR

Comandos para subir el trabajo a github:
git add .
git commit -m "escribe el cambio"
git push

comando para traer los cambios realizados de otra rama
1. Estar posicionado en la rama que quieres traer otro cambio 
    ej: posicionarse en Main para traer cambio de rama desarrollador
2. Escribir el siguiente comando en la terminal de Main
    git merge *desarrollador*
3. Se actualizan los cambios en el Main pero solo en tu entorno, para subirlo y que los demas lo vean
   se debe de realizar un push
    git push

Comando para descargar los cambios 
git pull

Dependencias al momento de generar el springboot:
- Spring Data JPA
- Spring Web
- Lombok
- MySQL Driver

Dependencias posterior a la generacion original
- 

Creacion de carpetas
- controller
- model
- repository
- service

Creacion de clases
- Se añaden por priemra vez las clases

Configuracion de archivo application.propietes
- Se configura para almacenar de manera local

Creacion archivo bdpetsocitiy
- Se agrega el script sql

- Creacion de las clases en modelo

- Se corrigen errores en las clases para un mejor flujo de trabajo

PREGUNTAS:
FN: desde vscode generamos las tablas? o nos conectamos a mysql con las tablas ya creadas? 


Alexis: creacion de metodos y cambios en seccion de DETALLECARRITO, y correcion de errores en ellos. Tambien se comento en ellas para saber su uso

- Se añade el puerto de enlace 8082 para comenzar a hacer pruebas en Postman
-> Nombre de sugerencia: http://localhost:8082/api/v1/usuario
-> nombre actual http://localhost:8082/petsocity/usuario

-> Durante la correccion de errores, nos percatamos que teniamos problemas en el codigo en general, con los nombres, secuencias e instancias.
- ya que basicamente, al momento de que springboot intentaba correr el repositorio este no encontraba la logica detras.

#########################
CONFIGURACION MYSQL
- Se debe iniciar MySQL connections con el localhost por defecto, usuario root pass root
- Se crea DATABASE "bdpetsocity" en donde se almacenaran las tablas y sus datos.
- Esta bd ya cuenta con todo los privilegios necesarios para hacer consultas y utilizar metodos CRUD